/*!
 * HooksJS - The set of hooks  (https://hooks.io)
 * Copyright 2024 by Serhii Pimenov
 * Licensed under MIT
 !*/
var Hooks=function(e){"use strict";const t=new Map;let o=0;const r={LOAD:"load",VIEWPORT:"viewport",ATTRIBUTE:"attribute",CHILDREN:"children",DATA:"data"},n={effect:e=>e,target:globalThis,event:"load",root:null};return e.USE_EFFECT_EVENTS=r,e.info=()=>{console.info("%c Hooks %c v0.4.0 %c 11.06.2024, 16:50:24 ","color: #ffffff; font-weight: bold; background: #5c2c05","color: white; background: darkgreen","color: white; background: #0080fe;")},e.useEffect=({effect:e,target:t,event:o,root:s}=n)=>{let c,i=o.toLowerCase();if("function"!=typeof e)throw Error("Effect must be a function!");if(!t)throw Error("Please specify a target element!");if(o===r.LOAD)c=t;else if("string"==typeof t)c=document.querySelector(t);else{if(!(t instanceof HTMLElement))throw Error("Invalid target element!");c=t}if(i===r.LOAD){const t=document.querySelector(c);if(null!==t)e(t);else{const t=new MutationObserver(((t,o)=>{const r=document.querySelector(c);null!==r&&(e(r),o.disconnect())}));t.observe(document.body,{childList:!0,subtree:!0})}}else if(i===r.VIEWPORT){let t=null===s?null:"string"==typeof s?document.querySelector(s):s;new IntersectionObserver(((t,o)=>{t.forEach((t=>{t.isIntersecting&&e(c)}))}),{root:t,rootMargin:"0px",threshold:.5}).observe(c)}else if(i===r.ATTRIBUTE){new MutationObserver((t=>{for(let o of t)o.target===c&&"attributes"===o.type&&e(c,o.attributeName,c.getAttribute(o.attributeName))})).observe(c,{attributes:!0})}else if(i===r.CHILDREN){new MutationObserver((t=>{for(let o of t)o.target===c&&"childList"===o.type&&e(c,o.addedNodes,o.removedNodes)})).observe(c,{childList:!0,subtree:!0})}else if(i===r.DATA){new MutationObserver((t=>{for(let o of t)o.target===c&&"characterData"===o.type&&e(c,c.textContent)})).observe(c,{characterData:!0})}},e.useEvent=e=>{let t,o,r,n;if("function"==typeof e)t=globalThis,o="load",r=e,n=!0;else{if("object"!=typeof e||e!=e)throw Error("Invalid argument type!");t=e.target||globalThis,o=e.event||"load",r=e.effect||(()=>{}),n=e.one||!1}if("string"==typeof t&&(t=document.querySelector(t)),"function"!=typeof r)throw Error("Effect must be a function!");const listener=e=>{n&&t.removeEventListener(o,listener),r(e)};return t.addEventListener(o,listener)},e.useMemo=e=>{const t=new Map;return function(...o){const r=""+o.length+o.join("+");if(t.has(r))return t.get(r);{const n=e(...o);return t.set(r,n),n}}},e.useState=(e,r)=>{const n=o;t.set(o,e),o++;return[()=>t.get(n),e=>{const o=t.get(n);t.set(n,"object"==typeof e?Object.assign({},e):e),"function"==typeof r&&r(t.get(n),o)}]},e}({});
